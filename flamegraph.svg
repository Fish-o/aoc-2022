<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="594"><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.51%)</title><rect x="0.3367%" y="597" width="0.5051%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.5867%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.51%)</title><rect x="0.3367%" y="581" width="0.5051%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="3"/><text x="0.5867%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.34%)</title><rect x="0.5051%" y="565" width="0.3367%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="2"/><text x="0.7551%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.34%)</title><rect x="0.5051%" y="549" width="0.3367%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="0.7551%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.17%)</title><rect x="0.6734%" y="533" width="0.1684%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.9234%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 1.35%)</title><rect x="0.0000%" y="613" width="1.3468%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="8"/><text x="0.2500%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.51%)</title><rect x="0.8418%" y="597" width="0.5051%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="3"/><text x="1.0918%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.17%)</title><rect x="1.1785%" y="581" width="0.1684%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="1"/><text x="1.4285%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (9 samples, 1.52%)</title><rect x="0.0000%" y="629" width="1.5152%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="9"/><text x="0.2500%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.17%)</title><rect x="1.3468%" y="613" width="0.1684%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="1"/><text x="1.5968%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.34%)</title><rect x="1.6835%" y="213" width="0.3367%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="2"/><text x="1.9335%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="1.8519%" y="197" width="0.1684%" height="15" fill="rgb(240,193,28)" fg:x="11" fg:w="1"/><text x="2.1019%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="1.8519%" y="181" width="0.1684%" height="15" fill="rgb(216,20,37)" fg:x="11" fg:w="1"/><text x="2.1019%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.17%)</title><rect x="2.1886%" y="197" width="0.1684%" height="15" fill="rgb(206,188,39)" fg:x="13" fg:w="1"/><text x="2.4386%" y="207.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h70ac62608e745caeE.llvm.6603837603074742213 (1 samples, 0.17%)</title><rect x="2.1886%" y="181" width="0.1684%" height="15" fill="rgb(217,207,13)" fg:x="13" fg:w="1"/><text x="2.4386%" y="191.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="2.3569%" y="181" width="0.1684%" height="15" fill="rgb(231,73,38)" fg:x="14" fg:w="1"/><text x="2.6069%" y="191.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="2.3569%" y="165" width="0.1684%" height="15" fill="rgb(225,20,46)" fg:x="14" fg:w="1"/><text x="2.6069%" y="175.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="2.3569%" y="149" width="0.1684%" height="15" fill="rgb(210,31,41)" fg:x="14" fg:w="1"/><text x="2.6069%" y="159.50"></text></g><g><title>aoc_2022::day19::Tick::get_best_leaf_count (1 samples, 0.17%)</title><rect x="2.5253%" y="181" width="0.1684%" height="15" fill="rgb(221,200,47)" fg:x="15" fg:w="1"/><text x="2.7753%" y="191.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="3.7037%" y="117" width="0.1684%" height="15" fill="rgb(226,26,5)" fg:x="22" fg:w="1"/><text x="3.9537%" y="127.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (2 samples, 0.34%)</title><rect x="3.7037%" y="133" width="0.3367%" height="15" fill="rgb(249,33,26)" fg:x="22" fg:w="2"/><text x="3.9537%" y="143.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="3.8721%" y="117" width="0.1684%" height="15" fill="rgb(235,183,28)" fg:x="23" fg:w="1"/><text x="4.1221%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="3.8721%" y="101" width="0.1684%" height="15" fill="rgb(221,5,38)" fg:x="23" fg:w="1"/><text x="4.1221%" y="111.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (4 samples, 0.67%)</title><rect x="3.5354%" y="165" width="0.6734%" height="15" fill="rgb(247,18,42)" fg:x="21" fg:w="4"/><text x="3.7854%" y="175.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (4 samples, 0.67%)</title><rect x="3.5354%" y="149" width="0.6734%" height="15" fill="rgb(241,131,45)" fg:x="21" fg:w="4"/><text x="3.7854%" y="159.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="4.0404%" y="133" width="0.1684%" height="15" fill="rgb(249,31,29)" fg:x="24" fg:w="1"/><text x="4.2904%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.17%)</title><rect x="4.2088%" y="165" width="0.1684%" height="15" fill="rgb(225,111,53)" fg:x="25" fg:w="1"/><text x="4.4588%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 1.18%)</title><rect x="6.2290%" y="149" width="1.1785%" height="15" fill="rgb(238,160,17)" fg:x="37" fg:w="7"/><text x="6.4790%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.67%)</title><rect x="6.7340%" y="133" width="0.6734%" height="15" fill="rgb(214,148,48)" fg:x="40" fg:w="4"/><text x="6.9840%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.34%)</title><rect x="7.0707%" y="117" width="0.3367%" height="15" fill="rgb(232,36,49)" fg:x="42" fg:w="2"/><text x="7.3207%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.34%)</title><rect x="7.0707%" y="101" width="0.3367%" height="15" fill="rgb(209,103,24)" fg:x="42" fg:w="2"/><text x="7.3207%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="7.2391%" y="85" width="0.1684%" height="15" fill="rgb(229,88,8)" fg:x="43" fg:w="1"/><text x="7.4891%" y="95.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="7.4074%" y="149" width="0.1684%" height="15" fill="rgb(213,181,19)" fg:x="44" fg:w="1"/><text x="7.6574%" y="159.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="7.4074%" y="133" width="0.1684%" height="15" fill="rgb(254,191,54)" fg:x="44" fg:w="1"/><text x="7.6574%" y="143.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="7.4074%" y="117" width="0.1684%" height="15" fill="rgb(241,83,37)" fg:x="44" fg:w="1"/><text x="7.6574%" y="127.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="7.4074%" y="101" width="0.1684%" height="15" fill="rgb(233,36,39)" fg:x="44" fg:w="1"/><text x="7.6574%" y="111.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="7.4074%" y="85" width="0.1684%" height="15" fill="rgb(226,3,54)" fg:x="44" fg:w="1"/><text x="7.6574%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.17%)</title><rect x="7.5758%" y="149" width="0.1684%" height="15" fill="rgb(245,192,40)" fg:x="45" fg:w="1"/><text x="7.8258%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h70ac62608e745caeE.llvm.6603837603074742213 (1 samples, 0.17%)</title><rect x="7.5758%" y="133" width="0.1684%" height="15" fill="rgb(238,167,29)" fg:x="45" fg:w="1"/><text x="7.8258%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.34%)</title><rect x="12.2896%" y="101" width="0.3367%" height="15" fill="rgb(232,182,51)" fg:x="73" fg:w="2"/><text x="12.5396%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="12.4579%" y="85" width="0.1684%" height="15" fill="rgb(231,60,39)" fg:x="74" fg:w="1"/><text x="12.7079%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="12.4579%" y="69" width="0.1684%" height="15" fill="rgb(208,69,12)" fg:x="74" fg:w="1"/><text x="12.7079%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.67%)</title><rect x="12.1212%" y="117" width="0.6734%" height="15" fill="rgb(235,93,37)" fg:x="72" fg:w="4"/><text x="12.3712%" y="127.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="12.6263%" y="101" width="0.1684%" height="15" fill="rgb(213,116,39)" fg:x="75" fg:w="1"/><text x="12.8763%" y="111.50"></text></g><g><title>__rust_alloc (1 samples, 0.17%)</title><rect x="12.7946%" y="117" width="0.1684%" height="15" fill="rgb(222,207,29)" fg:x="76" fg:w="1"/><text x="13.0446%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 2.02%)</title><rect x="11.4478%" y="133" width="2.0202%" height="15" fill="rgb(206,96,30)" fg:x="68" fg:w="12"/><text x="11.6978%" y="143.50">&lt;..</text></g><g><title>malloc (3 samples, 0.51%)</title><rect x="12.9630%" y="117" width="0.5051%" height="15" fill="rgb(218,138,4)" fg:x="77" fg:w="3"/><text x="13.2130%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="13.2997%" y="101" width="0.1684%" height="15" fill="rgb(250,191,14)" fg:x="79" fg:w="1"/><text x="13.5497%" y="111.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (3 samples, 0.51%)</title><rect x="13.8047%" y="117" width="0.5051%" height="15" fill="rgb(239,60,40)" fg:x="82" fg:w="3"/><text x="14.0547%" y="127.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="14.1414%" y="101" width="0.1684%" height="15" fill="rgb(206,27,48)" fg:x="84" fg:w="1"/><text x="14.3914%" y="111.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (7 samples, 1.18%)</title><rect x="13.4680%" y="133" width="1.1785%" height="15" fill="rgb(225,35,8)" fg:x="80" fg:w="7"/><text x="13.7180%" y="143.50"></text></g><g><title>cfree (2 samples, 0.34%)</title><rect x="14.3098%" y="117" width="0.3367%" height="15" fill="rgb(250,213,24)" fg:x="85" fg:w="2"/><text x="14.5598%" y="127.50"></text></g><g><title>__rdl_alloc (1 samples, 0.17%)</title><rect x="14.6465%" y="133" width="0.1684%" height="15" fill="rgb(247,123,22)" fg:x="87" fg:w="1"/><text x="14.8965%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.34%)</title><rect x="14.8148%" y="133" width="0.3367%" height="15" fill="rgb(231,138,38)" fg:x="88" fg:w="2"/><text x="15.0648%" y="143.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h70ac62608e745caeE.llvm.6603837603074742213 (2 samples, 0.34%)</title><rect x="14.8148%" y="117" width="0.3367%" height="15" fill="rgb(231,145,46)" fg:x="88" fg:w="2"/><text x="15.0648%" y="127.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="14.9832%" y="101" width="0.1684%" height="15" fill="rgb(251,118,11)" fg:x="89" fg:w="1"/><text x="15.2332%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.51%)</title><rect x="21.7172%" y="101" width="0.5051%" height="15" fill="rgb(217,147,25)" fg:x="129" fg:w="3"/><text x="21.9672%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="22.0539%" y="85" width="0.1684%" height="15" fill="rgb(247,81,37)" fg:x="131" fg:w="1"/><text x="22.3039%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 1.01%)</title><rect x="21.3805%" y="117" width="1.0101%" height="15" fill="rgb(209,12,38)" fg:x="127" fg:w="6"/><text x="21.6305%" y="127.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="22.2222%" y="101" width="0.1684%" height="15" fill="rgb(227,1,9)" fg:x="132" fg:w="1"/><text x="22.4722%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="22.2222%" y="85" width="0.1684%" height="15" fill="rgb(248,47,43)" fg:x="132" fg:w="1"/><text x="22.4722%" y="95.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (3 samples, 0.51%)</title><rect x="22.3906%" y="117" width="0.5051%" height="15" fill="rgb(221,10,30)" fg:x="133" fg:w="3"/><text x="22.6406%" y="127.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (2 samples, 0.34%)</title><rect x="22.5589%" y="101" width="0.3367%" height="15" fill="rgb(210,229,1)" fg:x="134" fg:w="2"/><text x="22.8089%" y="111.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (2 samples, 0.34%)</title><rect x="22.5589%" y="85" width="0.3367%" height="15" fill="rgb(222,148,37)" fg:x="134" fg:w="2"/><text x="22.8089%" y="95.50"></text></g><g><title>__rdl_alloc (1 samples, 0.17%)</title><rect x="22.8956%" y="117" width="0.1684%" height="15" fill="rgb(234,67,33)" fg:x="136" fg:w="1"/><text x="23.1456%" y="127.50"></text></g><g><title>__rust_dealloc (1 samples, 0.17%)</title><rect x="23.0640%" y="117" width="0.1684%" height="15" fill="rgb(247,98,35)" fg:x="137" fg:w="1"/><text x="23.3140%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.34%)</title><rect x="23.2323%" y="117" width="0.3367%" height="15" fill="rgb(247,138,52)" fg:x="138" fg:w="2"/><text x="23.4823%" y="127.50"></text></g><g><title>aoc_2022::day19::Tick::get_best_leaf_count (5 samples, 0.84%)</title><rect x="23.5690%" y="117" width="0.8418%" height="15" fill="rgb(213,79,30)" fg:x="140" fg:w="5"/><text x="23.8190%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.34%)</title><rect x="35.8586%" y="85" width="0.3367%" height="15" fill="rgb(246,177,23)" fg:x="213" fg:w="2"/><text x="36.1086%" y="95.50"></text></g><g><title>__rdl_alloc (1 samples, 0.17%)</title><rect x="36.1953%" y="85" width="0.1684%" height="15" fill="rgb(230,62,27)" fg:x="215" fg:w="1"/><text x="36.4453%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 2.36%)</title><rect x="35.0168%" y="101" width="2.3569%" height="15" fill="rgb(216,154,8)" fg:x="208" fg:w="14"/><text x="35.2668%" y="111.50">&lt;..</text></g><g><title>malloc (6 samples, 1.01%)</title><rect x="36.3636%" y="85" width="1.0101%" height="15" fill="rgb(244,35,45)" fg:x="216" fg:w="6"/><text x="36.6136%" y="95.50"></text></g><g><title>[libc.so.6] (3 samples, 0.51%)</title><rect x="36.8687%" y="69" width="0.5051%" height="15" fill="rgb(251,115,12)" fg:x="219" fg:w="3"/><text x="37.1187%" y="79.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (3 samples, 0.51%)</title><rect x="37.3737%" y="101" width="0.5051%" height="15" fill="rgb(240,54,50)" fg:x="222" fg:w="3"/><text x="37.6237%" y="111.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (2 samples, 0.34%)</title><rect x="37.5421%" y="85" width="0.3367%" height="15" fill="rgb(233,84,52)" fg:x="223" fg:w="2"/><text x="37.7921%" y="95.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="37.7104%" y="69" width="0.1684%" height="15" fill="rgb(207,117,47)" fg:x="224" fg:w="1"/><text x="37.9604%" y="79.50"></text></g><g><title>__rust_dealloc (3 samples, 0.51%)</title><rect x="37.8788%" y="101" width="0.5051%" height="15" fill="rgb(249,43,39)" fg:x="225" fg:w="3"/><text x="38.1288%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.67%)</title><rect x="38.3838%" y="101" width="0.6734%" height="15" fill="rgb(209,38,44)" fg:x="228" fg:w="4"/><text x="38.6338%" y="111.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h70ac62608e745caeE.llvm.6603837603074742213 (3 samples, 0.51%)</title><rect x="38.5522%" y="85" width="0.5051%" height="15" fill="rgb(236,212,23)" fg:x="229" fg:w="3"/><text x="38.8022%" y="95.50"></text></g><g><title>malloc (3 samples, 0.51%)</title><rect x="38.5522%" y="69" width="0.5051%" height="15" fill="rgb(242,79,21)" fg:x="229" fg:w="3"/><text x="38.8022%" y="79.50"></text></g><g><title>aoc_2022::day19::Tick::get_best_leaf_count (3 samples, 0.51%)</title><rect x="39.0572%" y="101" width="0.5051%" height="15" fill="rgb(211,96,35)" fg:x="232" fg:w="3"/><text x="39.3072%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.51%)</title><rect x="55.5556%" y="69" width="0.5051%" height="15" fill="rgb(253,215,40)" fg:x="330" fg:w="3"/><text x="55.8056%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.84%)</title><rect x="55.3872%" y="85" width="0.8418%" height="15" fill="rgb(211,81,21)" fg:x="329" fg:w="5"/><text x="55.6372%" y="95.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="56.0606%" y="69" width="0.1684%" height="15" fill="rgb(208,190,38)" fg:x="333" fg:w="1"/><text x="56.3106%" y="79.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="56.2290%" y="85" width="0.1684%" height="15" fill="rgb(235,213,38)" fg:x="334" fg:w="1"/><text x="56.4790%" y="95.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.17%)</title><rect x="56.3973%" y="85" width="0.1684%" height="15" fill="rgb(237,122,38)" fg:x="335" fg:w="1"/><text x="56.6473%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.17%)</title><rect x="56.3973%" y="69" width="0.1684%" height="15" fill="rgb(244,218,35)" fg:x="335" fg:w="1"/><text x="56.6473%" y="79.50"></text></g><g><title>__rust_alloc (1 samples, 0.17%)</title><rect x="56.5657%" y="85" width="0.1684%" height="15" fill="rgb(240,68,47)" fg:x="336" fg:w="1"/><text x="56.8157%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 1.18%)</title><rect x="56.7340%" y="85" width="1.1785%" height="15" fill="rgb(210,16,53)" fg:x="337" fg:w="7"/><text x="56.9840%" y="95.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h70ac62608e745caeE.llvm.6603837603074742213 (3 samples, 0.51%)</title><rect x="57.4074%" y="69" width="0.5051%" height="15" fill="rgb(235,124,12)" fg:x="341" fg:w="3"/><text x="57.6574%" y="79.50"></text></g><g><title>malloc (3 samples, 0.51%)</title><rect x="57.4074%" y="53" width="0.5051%" height="15" fill="rgb(224,169,11)" fg:x="341" fg:w="3"/><text x="57.6574%" y="63.50"></text></g><g><title>aoc_2022::day19::Tick::get_best_leaf_count (5 samples, 0.84%)</title><rect x="57.9125%" y="85" width="0.8418%" height="15" fill="rgb(250,166,2)" fg:x="344" fg:w="5"/><text x="58.1625%" y="95.50"></text></g><g><title>_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$aoc_2022..day19..Tick$GT$$GT$17he58bc63f110b1939E.llvm.15077226927290292325 (1 samples, 0.17%)</title><rect x="78.2828%" y="69" width="0.1684%" height="15" fill="rgb(242,216,29)" fg:x="465" fg:w="1"/><text x="78.5328%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.67%)</title><rect x="78.4512%" y="69" width="0.6734%" height="15" fill="rgb(230,116,27)" fg:x="466" fg:w="4"/><text x="78.7012%" y="79.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h70ac62608e745caeE.llvm.6603837603074742213 (2 samples, 0.34%)</title><rect x="78.7879%" y="53" width="0.3367%" height="15" fill="rgb(228,99,48)" fg:x="468" fg:w="2"/><text x="79.0379%" y="63.50"></text></g><g><title>malloc (2 samples, 0.34%)</title><rect x="78.7879%" y="37" width="0.3367%" height="15" fill="rgb(253,11,6)" fg:x="468" fg:w="2"/><text x="79.0379%" y="47.50"></text></g><g><title>aoc_2022::day19::Tick::get_best_leaf_count (2 samples, 0.34%)</title><rect x="79.1246%" y="69" width="0.3367%" height="15" fill="rgb(247,143,39)" fg:x="470" fg:w="2"/><text x="79.3746%" y="79.50"></text></g><g><title>aoc_2022::day19::Tick::new (72 samples, 12.12%)</title><rect x="79.4613%" y="69" width="12.1212%" height="15" fill="rgb(236,97,10)" fg:x="472" fg:w="72"/><text x="79.7113%" y="79.50">aoc_2022::day19::T..</text></g><g><title>cfree (3 samples, 0.51%)</title><rect x="91.5825%" y="69" width="0.5051%" height="15" fill="rgb(233,208,19)" fg:x="544" fg:w="3"/><text x="91.8325%" y="79.50"></text></g><g><title>[libc.so.6] (2 samples, 0.34%)</title><rect x="91.7508%" y="53" width="0.3367%" height="15" fill="rgb(216,164,2)" fg:x="545" fg:w="2"/><text x="92.0008%" y="63.50"></text></g><g><title>aoc_2022::day19::Tick::new (203 samples, 34.18%)</title><rect x="58.7542%" y="85" width="34.1751%" height="15" fill="rgb(220,129,5)" fg:x="349" fg:w="203"/><text x="59.0042%" y="95.50">aoc_2022::day19::Tick::new</text></g><g><title>malloc (5 samples, 0.84%)</title><rect x="92.0875%" y="69" width="0.8418%" height="15" fill="rgb(242,17,10)" fg:x="547" fg:w="5"/><text x="92.3375%" y="79.50"></text></g><g><title>[libc.so.6] (3 samples, 0.51%)</title><rect x="92.4242%" y="53" width="0.5051%" height="15" fill="rgb(242,107,0)" fg:x="549" fg:w="3"/><text x="92.6742%" y="63.50"></text></g><g><title>cfree (14 samples, 2.36%)</title><rect x="92.9293%" y="85" width="2.3569%" height="15" fill="rgb(251,28,31)" fg:x="552" fg:w="14"/><text x="93.1793%" y="95.50">c..</text></g><g><title>[libc.so.6] (11 samples, 1.85%)</title><rect x="93.4343%" y="69" width="1.8519%" height="15" fill="rgb(233,223,10)" fg:x="555" fg:w="11"/><text x="93.6843%" y="79.50">[..</text></g><g><title>aoc_2022::day19::Tick::new (334 samples, 56.23%)</title><rect x="39.5623%" y="101" width="56.2290%" height="15" fill="rgb(215,21,27)" fg:x="235" fg:w="334"/><text x="39.8123%" y="111.50">aoc_2022::day19::Tick::new</text></g><g><title>malloc (3 samples, 0.51%)</title><rect x="95.2862%" y="85" width="0.5051%" height="15" fill="rgb(232,23,21)" fg:x="566" fg:w="3"/><text x="95.5362%" y="95.50"></text></g><g><title>cfree (9 samples, 1.52%)</title><rect x="95.7912%" y="101" width="1.5152%" height="15" fill="rgb(244,5,23)" fg:x="569" fg:w="9"/><text x="96.0412%" y="111.50"></text></g><g><title>[libc.so.6] (5 samples, 0.84%)</title><rect x="96.4646%" y="85" width="0.8418%" height="15" fill="rgb(226,81,46)" fg:x="573" fg:w="5"/><text x="96.7146%" y="95.50"></text></g><g><title>aoc_2022::day19::Tick::new (440 samples, 74.07%)</title><rect x="24.4108%" y="117" width="74.0741%" height="15" fill="rgb(247,70,30)" fg:x="145" fg:w="440"/><text x="24.6608%" y="127.50">aoc_2022::day19::Tick::new</text></g><g><title>malloc (7 samples, 1.18%)</title><rect x="97.3064%" y="101" width="1.1785%" height="15" fill="rgb(212,68,19)" fg:x="578" fg:w="7"/><text x="97.5564%" y="111.50"></text></g><g><title>[libc.so.6] (2 samples, 0.34%)</title><rect x="98.1481%" y="85" width="0.3367%" height="15" fill="rgb(240,187,13)" fg:x="583" fg:w="2"/><text x="98.3981%" y="95.50"></text></g><g><title>aoc_2022::day19::Tick::new (498 samples, 83.84%)</title><rect x="15.1515%" y="133" width="83.8384%" height="15" fill="rgb(223,113,26)" fg:x="90" fg:w="498"/><text x="15.4015%" y="143.50">aoc_2022::day19::Tick::new</text></g><g><title>cfree (3 samples, 0.51%)</title><rect x="98.4848%" y="117" width="0.5051%" height="15" fill="rgb(206,192,2)" fg:x="585" fg:w="3"/><text x="98.7348%" y="127.50"></text></g><g><title>[libc.so.6] (3 samples, 0.51%)</title><rect x="98.4848%" y="101" width="0.5051%" height="15" fill="rgb(241,108,4)" fg:x="585" fg:w="3"/><text x="98.7348%" y="111.50"></text></g><g><title>cfree (2 samples, 0.34%)</title><rect x="98.9899%" y="133" width="0.3367%" height="15" fill="rgb(247,173,49)" fg:x="588" fg:w="2"/><text x="99.2399%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="99.1582%" y="117" width="0.1684%" height="15" fill="rgb(224,114,35)" fg:x="589" fg:w="1"/><text x="99.4082%" y="127.50"></text></g><g><title>aoc_2022::day19::Tick::new (545 samples, 91.75%)</title><rect x="7.7441%" y="149" width="91.7508%" height="15" fill="rgb(245,159,27)" fg:x="46" fg:w="545"/><text x="7.9941%" y="159.50">aoc_2022::day19::Tick::new</text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="99.3266%" y="133" width="0.1684%" height="15" fill="rgb(245,172,44)" fg:x="590" fg:w="1"/><text x="99.5766%" y="143.50"></text></g><g><title>aoc_2022::day19::Tick::new (566 samples, 95.29%)</title><rect x="4.3771%" y="165" width="95.2862%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="566"/><text x="4.6271%" y="175.50">aoc_2022::day19::Tick::new</text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="99.4949%" y="149" width="0.1684%" height="15" fill="rgb(205,117,38)" fg:x="591" fg:w="1"/><text x="99.7449%" y="159.50"></text></g><g><title>aoc_2022::day19::Tick::new (577 samples, 97.14%)</title><rect x="2.6936%" y="181" width="97.1380%" height="15" fill="rgb(237,72,25)" fg:x="16" fg:w="577"/><text x="2.9436%" y="191.50">aoc_2022::day19::Tick::new</text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="99.6633%" y="165" width="0.1684%" height="15" fill="rgb(244,70,9)" fg:x="592" fg:w="1"/><text x="99.9133%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="99.6633%" y="149" width="0.1684%" height="15" fill="rgb(217,125,39)" fg:x="592" fg:w="1"/><text x="99.9133%" y="159.50"></text></g><g><title>all (594 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(235,36,10)" fg:x="0" fg:w="594"/><text x="0.2500%" y="671.50"></text></g><g><title>aoc-2022 (594 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(251,123,47)" fg:x="0" fg:w="594"/><text x="0.2500%" y="655.50">aoc-2022</text></g><g><title>_start (585 samples, 98.48%)</title><rect x="1.5152%" y="629" width="98.4848%" height="15" fill="rgb(221,13,13)" fg:x="9" fg:w="585"/><text x="1.7652%" y="639.50">_start</text></g><g><title>__libc_start_main (585 samples, 98.48%)</title><rect x="1.5152%" y="613" width="98.4848%" height="15" fill="rgb(238,131,9)" fg:x="9" fg:w="585"/><text x="1.7652%" y="623.50">__libc_start_main</text></g><g><title>[libc.so.6] (585 samples, 98.48%)</title><rect x="1.5152%" y="597" width="98.4848%" height="15" fill="rgb(211,50,8)" fg:x="9" fg:w="585"/><text x="1.7652%" y="607.50">[libc.so.6]</text></g><g><title>std::rt::lang_start (585 samples, 98.48%)</title><rect x="1.5152%" y="581" width="98.4848%" height="15" fill="rgb(245,182,24)" fg:x="9" fg:w="585"/><text x="1.7652%" y="591.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (585 samples, 98.48%)</title><rect x="1.5152%" y="565" width="98.4848%" height="15" fill="rgb(242,14,37)" fg:x="9" fg:w="585"/><text x="1.7652%" y="575.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (585 samples, 98.48%)</title><rect x="1.5152%" y="549" width="98.4848%" height="15" fill="rgb(246,228,12)" fg:x="9" fg:w="585"/><text x="1.7652%" y="559.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (585 samples, 98.48%)</title><rect x="1.5152%" y="533" width="98.4848%" height="15" fill="rgb(213,55,15)" fg:x="9" fg:w="585"/><text x="1.7652%" y="543.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (585 samples, 98.48%)</title><rect x="1.5152%" y="517" width="98.4848%" height="15" fill="rgb(209,9,3)" fg:x="9" fg:w="585"/><text x="1.7652%" y="527.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (585 samples, 98.48%)</title><rect x="1.5152%" y="501" width="98.4848%" height="15" fill="rgb(230,59,30)" fg:x="9" fg:w="585"/><text x="1.7652%" y="511.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (585 samples, 98.48%)</title><rect x="1.5152%" y="485" width="98.4848%" height="15" fill="rgb(209,121,21)" fg:x="9" fg:w="585"/><text x="1.7652%" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (585 samples, 98.48%)</title><rect x="1.5152%" y="469" width="98.4848%" height="15" fill="rgb(220,109,13)" fg:x="9" fg:w="585"/><text x="1.7652%" y="479.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (585 samples, 98.48%)</title><rect x="1.5152%" y="453" width="98.4848%" height="15" fill="rgb(232,18,1)" fg:x="9" fg:w="585"/><text x="1.7652%" y="463.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (585 samples, 98.48%)</title><rect x="1.5152%" y="437" width="98.4848%" height="15" fill="rgb(215,41,42)" fg:x="9" fg:w="585"/><text x="1.7652%" y="447.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (585 samples, 98.48%)</title><rect x="1.5152%" y="421" width="98.4848%" height="15" fill="rgb(224,123,36)" fg:x="9" fg:w="585"/><text x="1.7652%" y="431.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (585 samples, 98.48%)</title><rect x="1.5152%" y="405" width="98.4848%" height="15" fill="rgb(240,125,3)" fg:x="9" fg:w="585"/><text x="1.7652%" y="415.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>aoc_2022::main (585 samples, 98.48%)</title><rect x="1.5152%" y="389" width="98.4848%" height="15" fill="rgb(205,98,50)" fg:x="9" fg:w="585"/><text x="1.7652%" y="399.50">aoc_2022::main</text></g><g><title>aoc_2022::day19::run (585 samples, 98.48%)</title><rect x="1.5152%" y="373" width="98.4848%" height="15" fill="rgb(205,185,37)" fg:x="9" fg:w="585"/><text x="1.7652%" y="383.50">aoc_2022::day19::run</text></g><g><title>aoc_2022::day19::Tick::new (585 samples, 98.48%)</title><rect x="1.5152%" y="357" width="98.4848%" height="15" fill="rgb(238,207,15)" fg:x="9" fg:w="585"/><text x="1.7652%" y="367.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (585 samples, 98.48%)</title><rect x="1.5152%" y="341" width="98.4848%" height="15" fill="rgb(213,199,42)" fg:x="9" fg:w="585"/><text x="1.7652%" y="351.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (585 samples, 98.48%)</title><rect x="1.5152%" y="325" width="98.4848%" height="15" fill="rgb(235,201,11)" fg:x="9" fg:w="585"/><text x="1.7652%" y="335.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (585 samples, 98.48%)</title><rect x="1.5152%" y="309" width="98.4848%" height="15" fill="rgb(207,46,11)" fg:x="9" fg:w="585"/><text x="1.7652%" y="319.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (585 samples, 98.48%)</title><rect x="1.5152%" y="293" width="98.4848%" height="15" fill="rgb(241,35,35)" fg:x="9" fg:w="585"/><text x="1.7652%" y="303.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (585 samples, 98.48%)</title><rect x="1.5152%" y="277" width="98.4848%" height="15" fill="rgb(243,32,47)" fg:x="9" fg:w="585"/><text x="1.7652%" y="287.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (585 samples, 98.48%)</title><rect x="1.5152%" y="261" width="98.4848%" height="15" fill="rgb(247,202,23)" fg:x="9" fg:w="585"/><text x="1.7652%" y="271.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (585 samples, 98.48%)</title><rect x="1.5152%" y="245" width="98.4848%" height="15" fill="rgb(219,102,11)" fg:x="9" fg:w="585"/><text x="1.7652%" y="255.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (584 samples, 98.32%)</title><rect x="1.6835%" y="229" width="98.3165%" height="15" fill="rgb(243,110,44)" fg:x="10" fg:w="584"/><text x="1.9335%" y="239.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (582 samples, 97.98%)</title><rect x="2.0202%" y="213" width="97.9798%" height="15" fill="rgb(222,74,54)" fg:x="12" fg:w="582"/><text x="2.2702%" y="223.50">aoc_2022::day19::Tick::new</text></g><g><title>aoc_2022::day19::Tick::new (580 samples, 97.64%)</title><rect x="2.3569%" y="197" width="97.6431%" height="15" fill="rgb(216,99,12)" fg:x="14" fg:w="580"/><text x="2.6069%" y="207.50">aoc_2022::day19::Tick::new</text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="99.8316%" y="181" width="0.1684%" height="15" fill="rgb(226,22,26)" fg:x="593" fg:w="1"/><text x="100.0816%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="99.8316%" y="165" width="0.1684%" height="15" fill="rgb(217,163,10)" fg:x="593" fg:w="1"/><text x="100.0816%" y="175.50"></text></g></svg></svg>